parent_config: https://raw.githubusercontent.com/christiankm/swiftlint-parent-config/main/dk.mitteldorf.swiftlint.yml

excluded:
  - Package.swift

disabled_rules:
  - explicit_type_interface
  - file_header # disabled as it's just not reliable
  - extension_access_modifier

opt_in_rules:
  - custom_rules
  - array_init
  - closure_body_length
  - closure_end_indentation
  - discouraged_object_literal
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_xctest_method
  - enum_case_associated_values_count
  - explicit_init
  - fallthrough
  - fatal_error_message
  #- file_header
  - file_name
  - file_name_no_space
  #- file_types_order
  - function_default_parameter_at_end
  - function_parameter_count
  - identical_operands
  - implicit_return
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - large_tuple
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - object_literal
  - optional_enum_case_matching
  - override_in_extension
  - prefixed_toplevel_constant
  - private_action
  - private_outlet
  - prohibited_interface_builder
  - raw_value_for_camel_cased_codable_enum
  - reduce_into
  - required_enum_case
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - switch_case_on_newline
  - trailing_closure
  - unowned_variable_capture
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call

# Configure Rules
# file_header:
#     required_pattern: |
#                       \/\/
#                       \/\/  FinanceKit
#                       \/\/  Copyright © \d{4} Christian Mitteldorf\. All rights reserved\.
#                       \/\/  MIT license, see LICENSE file for details
#                       \/\/
line_length:
  warning: 140

custom_rules: 
  class_name:
    name: "Class Name"
    regex: "(?i)(class|struct) \\S*(Protocol|Delegate):"
    message: "A class name should never contain `Delegate` or `Protocol`. Use a Protocol instead."
    severity: warning

  empty_line_after_guard:
    included: ".*.swift"
    name: "Empty Line After Guard"
    regex: "(^ *guard[ a-zA-Z0-9=?.\\(\\),><!]*\\{[ a-zA-Z0-9=?.\\(\\),><!]*\\}\n *(?!(?:return|guard))\\S+)"
    message: "There should be an empty line after a guard"
    severity: warning

  final_class:
    name: "Final Class"
    regex: "(?<!final )class (?!(\\{|private|func|var|.*XCTestCase))"
    message: "Classes not meant to be subclassed should be marked as `final`."
    match_kinds:
      - identifier
      - keyword
      - typeidentifier
    severity: warning

  force_https:
    name: "Force HTTPS"
    regex: "(?i)http:\\/\\/"
    message: "Using HTTP is not secure. Use HTTPS where possible."
    severity: warning

  logging:
    name: "Logging"
    regex: "(print|NSLog)\\("
    message: "Using print or NSLog is considered unsecure and inefficient. Use `os_log`"
    severity: warning

  # Custom rule violating when type inference is not used.
  # Violating:
  #   let view: UIView = UIView()
  #   view.backgroundColor = UIColor.red()
  # Non-violating:
  #   let view = UIView()
  #   view.backgroundColor = .red
  type_inferred_context:
    name: "type_inferred_context"
    regex: "(\\:\\s(\\w+)\\s\\=\\s\\1|\\.priority\\s\\=\\sUILayoutPriority\\.|(textColor|highlightedTextColor|tintColor|backgroundColor)\\s\\=\\sUIColor\\.|image\\s\\=\\sUIImage\\.|\\.alignmentMode\\s=\\sCATextLayerAlignmentMode\\.|separatorInset\\s=\\sUIEdgeInsets\\.|layoutMargins\\s=\\sUIEdgeInsets\\.)"
    message: "Type inferred context is preferred over explicit types."
    severity: warning
